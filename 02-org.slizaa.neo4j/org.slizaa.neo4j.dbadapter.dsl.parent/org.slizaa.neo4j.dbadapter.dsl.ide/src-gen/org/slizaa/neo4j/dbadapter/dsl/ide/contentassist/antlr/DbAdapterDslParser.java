/*
 * generated by Xtext 2.10.0
 */
package org.slizaa.neo4j.dbadapter.dsl.ide.contentassist.antlr;

import com.google.inject.Inject;
import java.util.Collection;
import java.util.HashMap;
import java.util.Map;
import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.slizaa.neo4j.dbadapter.dsl.ide.contentassist.antlr.internal.InternalDbAdapterDslParser;
import org.slizaa.neo4j.dbadapter.dsl.services.DbAdapterDslGrammarAccess;

public class DbAdapterDslParser extends AbstractContentAssistParser {

	@Inject
	private DbAdapterDslGrammarAccess grammarAccess;

	private Map<AbstractElement, String> nameMappings;

	@Override
	protected InternalDbAdapterDslParser createParser() {
		InternalDbAdapterDslParser result = new InternalDbAdapterDslParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getDbAdapterDefinitionAccess().getAlternatives(), "rule__DbAdapterDefinition__Alternatives");
					put(grammarAccess.getUnmanagedRemoteDatabaseAccess().getGroup(), "rule__UnmanagedRemoteDatabase__Group__0");
					put(grammarAccess.getUnmanagedRemoteDatabaseAccess().getGroup_4_0(), "rule__UnmanagedRemoteDatabase__Group_4_0__0");
					put(grammarAccess.getUnmanagedRemoteDatabaseAccess().getGroup_4_1(), "rule__UnmanagedRemoteDatabase__Group_4_1__0");
					put(grammarAccess.getUnmanagedRemoteDatabaseAccess().getGroup_4_2(), "rule__UnmanagedRemoteDatabase__Group_4_2__0");
					put(grammarAccess.getManagedLocalDatabaseAccess().getGroup_0(), "rule__ManagedLocalDatabase__Group_0__0");
					put(grammarAccess.getManagedLocalDatabaseAccess().getGroup_0_4(), "rule__ManagedLocalDatabase__Group_0_4__0");
					put(grammarAccess.getManagedLocalDatabaseAccess().getGroup_1(), "rule__ManagedLocalDatabase__Group_1__0");
					put(grammarAccess.getManagedLocalDatabaseAccess().getGroup_2(), "rule__ManagedLocalDatabase__Group_2__0");
					put(grammarAccess.getManagedLocalDatabaseAccess().getGroup_3(), "rule__ManagedLocalDatabase__Group_3__0");
					put(grammarAccess.getManagedLocalDatabaseAccess().getGroup_4(), "rule__ManagedLocalDatabase__Group_4__0");
					put(grammarAccess.getManagedLocalDatabaseAccess().getGroup_4_0(), "rule__ManagedLocalDatabase__Group_4_0__0");
					put(grammarAccess.getManagedLocalDatabaseAccess().getGroup_4_0_3(), "rule__ManagedLocalDatabase__Group_4_0_3__0");
					put(grammarAccess.getUnmanagedRemoteDatabaseAccess().getUriAssignment_4_0_1(), "rule__UnmanagedRemoteDatabase__UriAssignment_4_0_1");
					put(grammarAccess.getUnmanagedRemoteDatabaseAccess().getNameAssignment_4_1_1(), "rule__UnmanagedRemoteDatabase__NameAssignment_4_1_1");
					put(grammarAccess.getUnmanagedRemoteDatabaseAccess().getDescriptionAssignment_4_2_1(), "rule__UnmanagedRemoteDatabase__DescriptionAssignment_4_2_1");
					put(grammarAccess.getManagedLocalDatabaseAccess().getNameAssignment_0_4_1(), "rule__ManagedLocalDatabase__NameAssignment_0_4_1");
					put(grammarAccess.getManagedLocalDatabaseAccess().getDescriptionAssignment_1_1(), "rule__ManagedLocalDatabase__DescriptionAssignment_1_1");
					put(grammarAccess.getManagedLocalDatabaseAccess().getPortAssignment_2_1(), "rule__ManagedLocalDatabase__PortAssignment_2_1");
					put(grammarAccess.getManagedLocalDatabaseAccess().getStorageAssignment_3_1(), "rule__ManagedLocalDatabase__StorageAssignment_3_1");
					put(grammarAccess.getManagedLocalDatabaseAccess().getFilesAssignment_4_0_2(), "rule__ManagedLocalDatabase__FilesAssignment_4_0_2");
					put(grammarAccess.getManagedLocalDatabaseAccess().getFilesAssignment_4_0_3_1(), "rule__ManagedLocalDatabase__FilesAssignment_4_0_3_1");
					put(grammarAccess.getUnmanagedRemoteDatabaseAccess().getUnorderedGroup_4(), "rule__UnmanagedRemoteDatabase__UnorderedGroup_4");
					put(grammarAccess.getManagedLocalDatabaseAccess().getUnorderedGroup(), "rule__ManagedLocalDatabase__UnorderedGroup");
				}
			};
		}
		return nameMappings.get(element);
	}

	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			InternalDbAdapterDslParser typedParser = (InternalDbAdapterDslParser) parser;
			typedParser.entryRuleDbAdapterDefinition();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public DbAdapterDslGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(DbAdapterDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
