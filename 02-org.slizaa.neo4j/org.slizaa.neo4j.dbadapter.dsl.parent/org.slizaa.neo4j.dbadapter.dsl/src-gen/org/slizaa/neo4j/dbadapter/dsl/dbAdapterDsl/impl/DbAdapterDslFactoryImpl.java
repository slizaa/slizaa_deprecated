/**
 * generated by Xtext 2.10.0
 */
package org.slizaa.neo4j.dbadapter.dsl.dbAdapterDsl.impl;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

import org.slizaa.neo4j.dbadapter.dsl.dbAdapterDsl.*;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class DbAdapterDslFactoryImpl extends EFactoryImpl implements DbAdapterDslFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static DbAdapterDslFactory init()
  {
    try
    {
      DbAdapterDslFactory theDbAdapterDslFactory = (DbAdapterDslFactory)EPackage.Registry.INSTANCE.getEFactory(DbAdapterDslPackage.eNS_URI);
      if (theDbAdapterDslFactory != null)
      {
        return theDbAdapterDslFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new DbAdapterDslFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DbAdapterDslFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case DbAdapterDslPackage.DB_ADAPTER_DEFINITION: return createDbAdapterDefinition();
      case DbAdapterDslPackage.UNMANAGED_REMOTE_DATABASE: return createUnmanagedRemoteDatabase();
      case DbAdapterDslPackage.MANAGED_LOCAL_DATABASE: return createManagedLocalDatabase();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DbAdapterDefinition createDbAdapterDefinition()
  {
    DbAdapterDefinitionImpl dbAdapterDefinition = new DbAdapterDefinitionImpl();
    return dbAdapterDefinition;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public UnmanagedRemoteDatabase createUnmanagedRemoteDatabase()
  {
    UnmanagedRemoteDatabaseImpl unmanagedRemoteDatabase = new UnmanagedRemoteDatabaseImpl();
    return unmanagedRemoteDatabase;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ManagedLocalDatabase createManagedLocalDatabase()
  {
    ManagedLocalDatabaseImpl managedLocalDatabase = new ManagedLocalDatabaseImpl();
    return managedLocalDatabase;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DbAdapterDslPackage getDbAdapterDslPackage()
  {
    return (DbAdapterDslPackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static DbAdapterDslPackage getPackage()
  {
    return DbAdapterDslPackage.eINSTANCE;
  }

} //DbAdapterDslFactoryImpl
